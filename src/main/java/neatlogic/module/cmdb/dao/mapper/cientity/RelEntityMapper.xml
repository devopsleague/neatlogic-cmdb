<?xml version="1.0" encoding="UTF-8" ?>
<!--
Copyright(c) $today.year NeatLogic Co., Ltd. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="neatlogic.module.cmdb.dao.mapper.cientity.RelEntityMapper">

    <select id="getCiEntityIdByRelativeRelPath" resultType="java.lang.Long">
        select distinct
        <choose>
            <when test="relativeRelItemList[relativeRelItemList.size() - 1].direction == 'from'">
                t${relativeRelItemList.size()}.from_cientity_id
            </when>
            <otherwise>
                t${relativeRelItemList.size()}.to_cientity_id
            </otherwise>
        </choose>
        from cmdb_relentity t0
        <foreach collection="relativeRelItemList" item="item" index="idx">
            join cmdb_relentity t${idx+1} on
            <choose>
                <when test="item.direction == 'from'">
                    t${idx+1}.to_cientity_id =
                    <choose>
                        <when test="position=='from'">t${idx}.from_cientity_id</when>
                        <otherwise>t${idx}.to_cientity_id</otherwise>
                    </choose>
                </when>
                <otherwise>
                    t${idx+1}.from_cientity_id =
                    <choose>
                        <when test="position=='from'">t${idx}.from_cientity_id</when>
                        <otherwise>t${idx}.to_cientity_id</otherwise>
                    </choose>
                </otherwise>
            </choose>
            and t${idx+1}.rel_id = #{item.relId}
        </foreach>
        where
        t0.id = #{relEntityId}
    </select>

    <select id="getRelentityBySourceRelEntityId" parameterType="java.lang.Long"
            resultType="neatlogic.framework.cmdb.dto.cientity.RelEntityVo">
        SELECT a.id             as id,
               rel_id           AS relId,
               b.ci_id          AS fromCiId,
               c.ci_id          AS toCiId,
               from_cientity_id AS fromCiEntityId,
               to_cientity_id   AS toCiEntityId,
               b.name           AS fromCiEntityName,
               c.name           AS toCiEntityName
        FROM cmdb_relentity a
                 JOIN cmdb_cientity b ON a.from_cientity_id = b.id
                 JOIN cmdb_cientity c ON a.to_cientity_id = c.id
        WHERE a.source_relentity_id = #{value}
    </select>

    <select id="getExpiredRelEntity" parameterType="neatlogic.framework.cmdb.dto.cientity.RelEntityVo"
            resultType="neatlogic.framework.cmdb.dto.cientity.RelEntityVo">
        select
        a.id as id,
        rel_id AS relId,
        b.ci_id AS fromCiId,
        c.ci_id AS toCiId,
        from_cientity_id AS fromCiEntityId,
        to_cientity_id AS toCiEntityId,
        b.name AS fromCiEntityName,
        c.name AS toCiEntityName
        <if test="cacheFlushKey != null">
            ,#{cacheFlushKey} AS cacheFlushKey
        </if>
        from cmdb_relentity a
        JOIN cmdb_cientity b ON a.from_cientity_id = b.id
        JOIN cmdb_cientity c ON a.to_cientity_id = c.id
        where a.expired_time &lt;= NOW()
        LIMIT #{startNum}, #{pageSize}
    </select>


    <select id="getRelEntityById" parameterType="java.lang.Long"
            resultType="neatlogic.framework.cmdb.dto.cientity.RelEntityVo">
        SELECT a.id             as id,
               rel_id           AS relId,
               b.ci_id          AS fromCiId,
               c.ci_id          AS toCiId,
               from_cientity_id AS fromCiEntityId,
               to_cientity_id   AS toCiEntityId,
               b.name           AS fromCiEntityName,
               c.name           AS toCiEntityName
        FROM cmdb_relentity a
                 JOIN cmdb_cientity b ON a.from_cientity_id = b.id
                 JOIN cmdb_cientity c ON a.to_cientity_id = c.id
        WHERE a.id = #{value}
    </select>

    <select id="getFromRelEntityByFromCiIdAndRelId" parameterType="neatlogic.framework.cmdb.dto.cientity.RelEntityVo"
            resultType="neatlogic.framework.cmdb.dto.cientity.RelEntityVo">
        SELECT distinct rel_id           AS relId,
                        from_cientity_id AS fromCiEntityId
        FROM cmdb_relentity a
                 JOIN cmdb_cientity b ON a.from_cientity_id = b.id
        WHERE rel_id = #{relId}
          AND b.ci_id = #{fromCiId}
        LIMIT #{startNum} , #{pageSize}
    </select>

    <select id="getToRelEntityByToCiIdAndRelId" parameterType="neatlogic.framework.cmdb.dto.cientity.RelEntityVo"
            resultType="neatlogic.framework.cmdb.dto.cientity.RelEntityVo">
        SELECT distinct rel_id         AS relId,
                        to_cientity_id AS toCiEntityId
        FROM cmdb_relentity a
                 JOIN cmdb_cientity c ON a.to_cientity_id = c.id
        WHERE rel_id = #{relId}
          AND c.ci_id = #{toCiId}
        LIMIT #{startNum} , #{pageSize}
    </select>

    <select id="getRelEntityByFromCiIdAndRelId" resultType="neatlogic.framework.cmdb.dto.cientity.RelEntityVo">
        SELECT rel_id           AS relId,
               b.ci_id          AS fromCiId,
               c.ci_id          AS toCiId,
               from_cientity_id AS fromCiEntityId,
               to_cientity_id   AS toCiEntityId,
               b.name           AS fromCiEntityName,
               c.name           AS toCiEntityName
        FROM cmdb_relentity a
                 JOIN cmdb_cientity b ON a.from_cientity_id = b.id
                 JOIN cmdb_cientity c ON a.to_cientity_id = c.id
        WHERE rel_id = #{relId}
          AND b.ci_id = #{fromCiId}
    </select>

    <select id="getRelEntityByToCiIdAndRelId" resultType="neatlogic.framework.cmdb.dto.cientity.RelEntityVo">
        SELECT rel_id           AS relId,
               b.ci_id          AS fromCiId,
               c.ci_id          AS toCiId,
               from_cientity_id AS fromCiEntityId,
               to_cientity_id   AS toCiEntityId,
               b.name           AS fromCiEntityName,
               c.name           AS toCiEntityName
        FROM cmdb_relentity a
                 JOIN cmdb_cientity b ON a.from_cientity_id = b.id
                 JOIN cmdb_cientity c ON a.to_cientity_id = c.id
        WHERE rel_id = #{relId}
          AND c.ci_id = #{toCiId}
    </select>

    <select id="getRelEntityByRelId" parameterType="neatlogic.framework.cmdb.dto.cientity.RelEntityVo"
            resultType="neatlogic.framework.cmdb.dto.cientity.RelEntityVo">
        SELECT
        a.id,
        rel_id AS relId,
        b.ci_id AS fromCiId,
        c.ci_id AS toCiId,
        from_cientity_id AS fromCiEntityId,
        to_cientity_id AS toCiEntityId,
        b.name AS fromCiEntityName,
        c.name AS toCiEntityName
        <if test="cacheFlushKey != null">
            ,#{cacheFlushKey} AS cacheFlushKey
        </if>
        FROM cmdb_relentity a
        JOIN cmdb_cientity b ON a.from_cientity_id = b.id
        JOIN cmdb_cientity c ON a.to_cientity_id = c.id
        WHERE rel_id = #{relId}
        LIMIT #{startNum}, #{pageSize}
    </select>


    <select id="checkRelEntityIsExists" parameterType="neatlogic.framework.cmdb.dto.cientity.RelEntityVo"
            resultType="int">
        SELECT COUNT(1)
        FROM `cmdb_relentity`
        WHERE from_cientity_id = #{fromCiEntityId}
          AND to_cientity_id = #{toCiEntityId}
          AND rel_id = #{relId}
    </select>

    <select id="getRelEntityByToCiEntityIdAndRelId" resultType="neatlogic.framework.cmdb.dto.cientity.RelEntityVo">
        SELECT
        a.`id`,
        a.`rel_id` AS relId,
        a.`from_cientity_id` AS fromCiEntityId,
        a.`to_cientity_id` AS toCiEntityId,
        a.`transaction_id` AS transactionId,
        b.`name` AS fromCiEntityName,
        c.`name` AS toCiEntityName,
        a.`valid_day` AS validDay,
        b.`ci_id` AS fromCiId,
        c.`ci_id` AS toCiId,
        'to' AS direction
        FROM `cmdb_relentity` a
        JOIN `cmdb_cientity` b ON a.`from_cientity_id` = b.id
        JOIN `cmdb_cientity` c ON a.`to_cientity_id` = c.id
        WHERE a.to_cientity_id = #{toCiEntityId}
        AND a.rel_id = #{relId}
        AND ( not exists (select 1 from cmdb_cientity_expiredtime xx where xx.cientity_id =
        a.from_cientity_id) or exists
        (select 1 from cmdb_cientity_expiredtime xx where xx.cientity_id =
        a.from_cientity_id
        and xx.expired_time &gt;= NOW()))
        <if test="limit != null">
            LIMIT #{limit}
        </if>
    </select>

    <select id="getRelEntityByFromCiEntityIdAndToCiEntityIdAndRelId"
            resultType="neatlogic.framework.cmdb.dto.cientity.RelEntityVo">
        SELECT a.`id`,
               a.`rel_id`           AS relId,
               a.`from_cientity_id` AS fromCiEntityId,
               a.`to_cientity_id`   AS toCiEntityId,
               a.`transaction_id`   AS transactionId,
               b.`name`             AS fromCiEntityName,
               c.`name`             AS toCiEntityName,
               a.`valid_day`        AS validDay,
               b.`ci_id`            AS fromCiId,
               c.`ci_id`            AS toCiId
        FROM `cmdb_relentity` a
                 JOIN `cmdb_cientity` b ON a.`from_cientity_id` = b.id
                 JOIN `cmdb_cientity` c ON a.`to_cientity_id` = c.id
        WHERE a.from_cientity_id = #{fromCiEntityId}
          AND a.to_cientity_id = #{toCiEntityId}
          AND a.rel_id = #{relId}
    </select>

    <select id="getRelEntityByFromCiEntityIdAndRelId" resultType="neatlogic.framework.cmdb.dto.cientity.RelEntityVo">
        SELECT
        a.`id`,
        a.`rel_id` AS relId,
        a.`from_cientity_id` AS fromCiEntityId,
        a.`to_cientity_id` AS toCiEntityId,
        a.`transaction_id` AS transactionId,
        b.`name` AS fromCiEntityName,
        c.`name` AS toCiEntityName,
        a.`valid_day` AS validDay,
        b.`ci_id` AS fromCiId,
        c.`ci_id` AS toCiId,
        'from' as direction
        FROM `cmdb_relentity` a
        JOIN `cmdb_cientity` b ON a.`from_cientity_id` = b.id
        JOIN `cmdb_cientity` c ON a.`to_cientity_id` = c.id
        WHERE a.from_cientity_id = #{fromCiEntityId}
        AND a.rel_id = #{relId}
        AND ( not exists (select 1 from cmdb_cientity_expiredtime xx where xx.cientity_id =
        a.to_cientity_id) or exists
        (select 1 from cmdb_cientity_expiredtime xx where xx.cientity_id =
        a.to_cientity_id
        and xx.expired_time &gt;= NOW()))
        <if test="limit != null">
            LIMIT #{limit}
        </if>
    </select>

    <select id="getRelEntityByCiEntityId" parameterType="java.lang.Long"
            resultType="neatlogic.framework.cmdb.dto.cientity.RelEntityVo">
        SELECT a.`id`,
               a.`rel_id`           AS relId,
               a.`transaction_id`   AS transactionId,
               a.`from_cientity_id` AS fromCiEntityId,
               a.`to_cientity_id`   AS toCiEntityId,
               b.`name`             AS fromCiEntityName,
               c.`name`             AS toCiEntityName,
               d.`from_ci_id`       AS fromCiId,
               d.`to_ci_id`         AS toCiId,
               d.`type_id`          AS relTypeId,
               e.`name`             AS relTypeName,
               d.`to_name`          AS relName,
               d.`to_label`         AS relLabel,
               'from'               AS direction
        FROM `cmdb_relentity` a
                 JOIN `cmdb_cientity` b ON a.`from_cientity_id` = b.`id`
                 JOIN `cmdb_cientity` c ON a.`to_cientity_id` = c.`id`
                 JOIN `cmdb_rel` d ON a.rel_id = d.id
                 JOIN `cmdb_reltype` e ON d.type_id = e.id
        WHERE a.from_cientity_id = #{value}
        UNION
        SELECT a.`id`,
               a.`rel_id`           AS relId,
               a.`transaction_id`   AS transactionId,
               a.`from_cientity_id` AS fromCiEntityId,
               a.`to_cientity_id`   AS toCiEntityId,
               b.`name`             AS fromCiEntityName,
               c.`name`             AS toCiEntityName,
               d.`from_ci_id`       AS fromCiId,
               d.`to_ci_id`         AS toCiId,
               d.`type_id`          AS relTypeId,
               e.`name`             AS relTypeName,
               d.`from_name`        AS relName,
               d.`from_label`       AS relLabel,
               'to'                 AS direction
        FROM `cmdb_relentity` a
                 JOIN
             `cmdb_cientity` b ON a.`from_cientity_id` = b.`id`
                 JOIN `cmdb_cientity` c ON a.`to_cientity_id` = c.`id`
                 JOIN `cmdb_rel` d ON a.rel_id = d.id
                 JOIN `cmdb_reltype` e ON d.type_id = e.id
        WHERE a.to_cientity_id = #{value}
        ORDER BY id
    </select>

    <select id="getFromToCiEntityIdByCiEntityIdList" resultType="java.lang.Long">
        SELECT
        a.`to_cientity_id`
        FROM
        `cmdb_relentity` a
        WHERE a.from_cientity_id IN
        <foreach collection="idList" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        UNION
        SELECT
        a.`from_cientity_id`
        FROM
        `cmdb_relentity` a
        WHERE a.to_cientity_id IN
        <foreach collection="idList" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getFromToCiEntityIdByCiEntityId" parameterType="java.lang.Long" resultType="java.lang.Long">
        SELECT a.`to_cientity_id`
        FROM `cmdb_relentity` a
        WHERE a.from_cientity_id = #{value}
        UNION
        SELECT a.`from_cientity_id`
        FROM `cmdb_relentity` a
        WHERE a.to_cientity_id = #{value}
    </select>

    <select id="searchRelEntityByCiEntityIdList" resultType="neatlogic.framework.cmdb.dto.cientity.RelEntityVo">
        SELECT
        a.`id`,
        a.`rel_id` AS relId,
        a.`from_cientity_id` AS fromCiEntityId,
        a.`to_cientity_id` AS toCiEntityId,
        a.`transaction_id` AS transactionId,
        b.`name` AS fromCiEntityName,
        c.`name` AS toCiEntityName,
        d.`from_ci_id` AS fromCiId,
        d.`to_ci_id` AS toCiId,
        d.`type_id` AS relTypeId,
        e.`name` AS relTypeName,
        'from' AS direction
        FROM
        `cmdb_relentity` a
        JOIN `cmdb_cientity` b ON a.`from_cientity_id` = b.`id`
        JOIN `cmdb_cientity` c ON a.`to_cientity_id` = c.`id`
        JOIN `cmdb_rel` d ON a.rel_id = d.id
        JOIN `cmdb_reltype` e ON d.type_id = e.id
        WHERE a.from_cientity_id IN
        <foreach collection="idList" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        <if test="relIdList != null and relIdList.size() > 0">
            AND a.rel_id IN
            <foreach collection="relIdList" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        UNION
        SELECT
        a.`id`,
        a.`rel_id` AS relId,
        a.`from_cientity_id` AS fromCiEntityId,
        a.`to_cientity_id` AS toCiEntityId,
        a.`transaction_id` AS transactionId,
        b.`name` AS fromCiEntityName,
        c.`name` AS toCiEntityName,
        d.`from_ci_id` AS fromCiId,
        d.`to_ci_id` AS toCiId,
        d.`type_id` AS relTypeId,
        e.`name` AS relTypeName,
        'to' AS direction
        FROM
        `cmdb_relentity` a
        JOIN `cmdb_cientity` b ON a.`from_cientity_id` = b.`id`
        JOIN `cmdb_cientity` c ON a.`to_cientity_id` = c.`id`
        JOIN `cmdb_rel` d ON a.rel_id = d.id
        JOIN `cmdb_reltype` e ON d.type_id = e.id
        WHERE a.to_cientity_id IN
        <foreach collection="idList" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        <if test="relIdList != null and relIdList.size() > 0">
            AND a.rel_id IN
            <foreach collection="relIdList" item="item" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <update id="updateRelEntityRenewTime" parameterType="java.lang.Long">
        update cmdb_relentity
        set renew_time = now(3)
        where id = #{value}
    </update>

    <update id="updateRelEntityValidDay" parameterType="neatlogic.framework.cmdb.dto.cientity.RelEntityVo">
        update cmdb_relentity
        set valid_day = #{validDay},
        <choose>
            <when test="validDay == null or validDay == 0">
                expired_time = null
            </when>
            <otherwise>
                expired_time = DATE_ADD(IFNULL(insert_time, NOW()), INTERVAL #{validDay} DAY)
            </otherwise>
        </choose>
        where id = #{id}
    </update>

    <update id="clearRelEntityFromIndex">
        update cmdb_relentity
        set from_index = null
        where rel_id = #{relId}
          and from_cientity_id = #{ciEntityId}
          and from_index is not null
    </update>

    <update id="clearRelEntityToIndex">
        update cmdb_relentity
        set to_index = null
        where rel_id = #{relId}
          and to_cientity_id = #{ciEntityId}
          and to_index is not null
    </update>

    <update id="updateRelEntityFromIndex" parameterType="neatlogic.framework.cmdb.dto.cientity.RelEntityVo">
        update cmdb_relentity
        set `from_index` = #{fromIndex}
        where id = #{id}
    </update>

    <update id="updateRelEntityToIndex" parameterType="neatlogic.framework.cmdb.dto.cientity.RelEntityVo">
        update cmdb_relentity
        set `to_index` = #{toIndex}
        where id = #{id}
    </update>


    <insert id="insertRelEntity" parameterType="neatlogic.framework.cmdb.dto.cientity.RelEntityVo">
        INSERT INTO `cmdb_relentity` (`id`,
        `rel_id`,
        `from_cientity_id`,
        `to_cientity_id`,
        `transaction_id`,
        `insert_time`,
        `renew_time`,
        `valid_day`,
        `source_relentity_id`,
        `relativerel_hash`
        <if test="validDay != null and validDay > 0">
            ,`expired_time`
        </if>)
        VALUES (
        #{id},
        #{relId},
        #{fromCiEntityId},
        #{toCiEntityId},
        #{transactionId},
        now(3),
        now(3),
        #{validDay},
        #{sourceRelEntityId},
        #{relativeRelHash}
        <if test="validDay != null and validDay > 0">
            ,DATE_ADD(NOW(3),INTERVAL #{validDay} DAY)
        </if>)
    </insert>


    <delete id="deleteRelEntityByFromCiEntityIdAndRelId">
        DELETE
        FROM `cmdb_relentity`
        WHERE from_cientity_id = #{fromCiEntityId}
          AND rel_id = #{relId}
    </delete>

    <delete id="deleteRelEntityByToCiEntityIdAndRelId">
        DELETE
        FROM `cmdb_relentity`
        WHERE to_cientity_id = #{toCiEntityId}
          AND rel_id = #{relId}
    </delete>

    <delete id="deleteRelEntityByRelIdFromCiEntityIdToCiEntityId">
        DELETE
        FROM `cmdb_relentity`
        WHERE rel_id = #{relId}
          AND from_cientity_id = #{fromCiEntityId}
          AND to_cientity_id = #{toCiEntityId}
    </delete>

    <delete id="deleteRelEntityBySourceRelEntityId" parameterType="java.lang.Long">
        delete
        from `cmdb_relentity`
        where source_relentity_id = #{value}
    </delete>
</mapper>
