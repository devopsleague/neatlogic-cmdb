<?xml version="1.0" encoding="UTF-8" ?>
<!--
Copyright(c) 2023 NeatLogic Co., Ltd. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="neatlogic.module.cmdb.dao.mapper.sync.ObjectMapper">
    <select id="getObjectByCategoryAndType" resultType="neatlogic.framework.cmdb.dto.sync.ObjectVo">
        select a.id,
               a.obj_category as objCategory,
               a.obj_type     as objType,
               a.ci_id        as ciId,
               b.name         as ciName,
               b.label        as ciLabel
        from cmdb_sync_objtype a
                 join cmdb_ci b on a.ci_id = b.id
        where a.obj_category = #{category}
          and a.obj_type = #{type}
    </select>

    <select id="checkObjectIsExists" parameterType="neatlogic.framework.cmdb.dto.sync.ObjectVo" resultType="int">
        select count(1)
        from cmdb_sync_objtype
        where id != #{id}
          and obj_category = #{objCategory}
          and obj_type = #{objType}
    </select>

    <select id="checkObjectCiIdIsExists" parameterType="neatlogic.framework.cmdb.dto.sync.ObjectVo" resultType="int">
        select count(1)
        from cmdb_sync_objtype
        where id != #{id}
          and ci_id = #{ciId}
    </select>

    <select id="getObjectById" parameterType="java.lang.Long" resultType="neatlogic.framework.cmdb.dto.sync.ObjectVo">
        select a.id,
               a.obj_category as objCategory,
               a.obj_type     as objType,
               a.ci_id        as ciId
        from cmdb_sync_objtype a
        where id = #{value}
    </select>

    <select id="searchObject" parameterType="neatlogic.framework.cmdb.dto.sync.ObjectVo"
            resultType="neatlogic.framework.cmdb.dto.sync.ObjectVo">
        select a.id,
        a.obj_category as objCategory,
        a.obj_type as objType,
        a.ci_id as ciId,
        b.name as ciName,
        b.label as ciLabel
        from cmdb_sync_objtype a
        join cmdb_ci b on a.ci_id = b.id
        <include refid="searchObjectSql"></include>
        limit #{startNum},#{pageSize}
    </select>

    <select id="searchObjectCount" parameterType="neatlogic.framework.cmdb.dto.sync.ObjectVo"
            resultType="int">
        select count(1)
        from cmdb_sync_objtype a
                 join cmdb_ci b on a.ci_id = b.id
    </select>

    <sql id="searchObjectSql">
        <where>
            <if test="keyword != null and keyword != ''">
                and
                (a.obj_category like concat('%',#{keyword},'%')
                or a.obj_type like concat('%',#{keyword},'%')
                )
            </if>
            <if test="ciId != null">
                and a.ci_id = #{ciId}
            </if>
        </where>
    </sql>

    <insert id="insertObject" parameterType="neatlogic.framework.cmdb.dto.sync.ObjectVo">
        insert into cmdb_sync_objtype
        (id,
         obj_category,
         obj_type,
         ci_id)
        values (#{id},
                #{objCategory},
                #{objType},
                #{ciId})
    </insert>

    <update id="updateObject" parameterType="neatlogic.framework.cmdb.dto.sync.ObjectVo">
        update cmdb_sync_objtype
        set obj_category = #{objCategory},
            obj_type     = #{objType},
            ci_id        = #{ciId}
        where id = #{id}
    </update>

    <delete id="deleteObject" parameterType="java.lang.Long">
        delete
        from cmdb_sync_objtype
        where id = #{value}
    </delete>

</mapper>
